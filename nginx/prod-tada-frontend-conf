# Разрешаем CORS только с ta-da.co и www.ta-da.co
map $http_origin $cors_allow_origin {
    default "";
    "~^https?://(www\.)?ta-da\.co$" $http_origin;
}

server {
    listen 80;
    server_name api.tada.illiacodes.dev;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name api.tada.illiacodes.dev;

    client_max_body_size 25M;

    ssl_certificate     /etc/letsencrypt/live/api.tada.illiacodes.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.tada.illiacodes.dev/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    # CORS-заголовки добавляем на уровне server (будут и для 204/401/5xx благодаря 'always')
    add_header Access-Control-Allow-Origin      $cors_allow_origin always;
    add_header Access-Control-Allow-Credentials "true"              always;
    add_header Access-Control-Allow-Methods     "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;
    add_header Access-Control-Allow-Headers     "Authorization,Content-Type,X-Requested-Wit>
    add_header Access-Control-Max-Age           "86400"             always;

    location / {
        # Preflight: просто 204
        if ($request_method = OPTIONS) { return 204; }

        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}