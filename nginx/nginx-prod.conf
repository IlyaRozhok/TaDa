server {
    server_name domain-example.com;

    listen 443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/domain-example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/domain-example.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    client_max_body_size 25M;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Frontend (Next.js prod)
    location / {
        proxy_pass http://127.0.0.1:3000; # frontend-prod container/pm2
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # API (NestJS prod, глобальный префикс /api)
    location /api/ {
        proxy_pass http://127.0.0.1:3001/api/; # backend-prod container
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Опционально: отдача /uploads, если остаётесь на локальном диске
    # location /uploads/ {
    #     alias /var/app/uploads/; # смонтируйте хостовую директорию в контейнер
    #     add_header Cache-Control "public, max-age=31536000, immutable";
    # }
}

server {
    listen 80;
    server_name domain-example.com;
    return 301 https://$host$request_uri;
}