#!/usr/bin/env ts-node

import { config } from "dotenv";
import { join } from "path";

// Load environment variables
config({ path: join(__dirname, "..", ".env") });

function diagnoseRedirectUriMismatch() {
  console.log("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏ redirect_uri_mismatch\n");

  // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const googleClientId = process.env.GOOGLE_CLIENT_ID;
  const googleCallbackUrl = process.env.GOOGLE_CALLBACK_URL;
  const frontendUrl = process.env.FRONTEND_URL;
  const port = process.env.PORT || "5001";

  console.log("üìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:");
  console.log(`   GOOGLE_CLIENT_ID: ${googleClientId || "‚ùå –ù–ï –ó–ê–î–ê–ù"}`);
  console.log(`   GOOGLE_CALLBACK_URL: ${googleCallbackUrl || "‚ùå –ù–ï –ó–ê–î–ê–ù"}`);
  console.log(`   FRONTEND_URL: ${frontendUrl || "‚ùå –ù–ï –ó–ê–î–ê–ù"}`);
  console.log(`   PORT: ${port}`);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∂–∏–¥–∞–µ–º—ã–π callback URL
  const expectedCallbackUrl = `http://localhost:${port}/auth/google/callback`;

  console.log("\nüéØ –û–∂–∏–¥–∞–µ–º—ã–π callback URL:");
  console.log(`   ${expectedCallbackUrl}`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
  if (googleCallbackUrl !== expectedCallbackUrl) {
    console.log("\n‚ùå –ü–†–û–ë–õ–ï–ú–ê –ù–ê–ô–î–ï–ù–ê:");
    console.log(`   –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π URL: ${googleCallbackUrl}`);
    console.log(`   –û–∂–∏–¥–∞–µ–º—ã–π URL:   ${expectedCallbackUrl}`);

    if (!googleCallbackUrl) {
      console.log("\nüîß –†–ï–®–ï–ù–ò–ï: –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è");
      console.log(`   GOOGLE_CALLBACK_URL=${expectedCallbackUrl}`);
    } else {
      console.log("\nüîß –†–ï–®–ï–ù–ò–ï: –û–±–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è");
      console.log(`   GOOGLE_CALLBACK_URL=${expectedCallbackUrl}`);
    }
  } else {
    console.log("\n‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ");
  }

  console.log("\nüìã –ß—Ç–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ Google Cloud Console:");
  console.log("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Google Cloud Console");
  console.log("2. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç");
  console.log('3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "APIs & Services" > "Credentials"');
  console.log("4. –ù–∞–π–¥–∏—Ç–µ –≤–∞—à OAuth 2.0 Client ID");
  console.log("5. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è");
  console.log('6. –í —Ä–∞–∑–¥–µ–ª–µ "Authorized redirect URIs" –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å:');
  console.log(`   ${expectedCallbackUrl}`);

  console.log("\nüîß –ü–æ—à–∞–≥–æ–≤–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:");
  console.log("1. –í Google Cloud Console:");
  console.log("   - –£–¥–∞–ª–∏—Ç–µ –≤—Å–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ redirect URIs");
  console.log(`   - –î–æ–±–∞–≤—å—Ç–µ: ${expectedCallbackUrl}`);
  console.log('   - –ù–∞–∂–º–∏—Ç–µ "Save"');
  console.log("");
  console.log("2. –í —Ñ–∞–π–ª–µ backend/.env:");
  console.log(`   GOOGLE_CALLBACK_URL=${expectedCallbackUrl}`);
  console.log("");
  console.log("3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ backend —Å–µ—Ä–≤–µ—Ä");
  console.log("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞: http://localhost:5001/auth/google");

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–∏–µ –æ—à–∏–±–∫–∏
  console.log("\n‚ö†Ô∏è  –ß–∞—Å—Ç—ã–µ –æ—à–∏–±–∫–∏:");

  if (
    googleCallbackUrl?.includes("https://") &&
    googleCallbackUrl?.includes("localhost")
  ) {
    console.log("   ‚ùå –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è HTTPS —Å localhost (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å HTTP)");
  }

  if (googleCallbackUrl?.includes("3000")) {
    console.log("   ‚ùå –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ—Ä—Ç 3000 (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 5001 –¥–ª—è backend)");
  }

  if (googleCallbackUrl?.includes("frontend")) {
    console.log(
      "   ‚ùå Callback URL —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ frontend (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å backend)"
    );
  }

  if (!googleCallbackUrl?.includes("/auth/google/callback")) {
    console.log(
      "   ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å callback (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å /auth/google/callback)"
    );
  }

  console.log("\nüì± –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:");
  console.log("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5001");
  console.log(
    "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤ Google Cloud Console –≤–∫–ª—é—á–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç"
  );
  console.log("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ OAuth consent screen –Ω–∞—Å—Ç—Ä–æ–µ–Ω");
  console.log("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Client ID –∏ Secret —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ");

  console.log("\nüß™ –¢–µ—Å—Ç URL:");
  console.log(
    `curl -I "${expectedCallbackUrl.replace("/auth/google/callback", "/auth/google")}"`
  );

  return {
    currentCallbackUrl: googleCallbackUrl,
    expectedCallbackUrl,
    isCorrect: googleCallbackUrl === expectedCallbackUrl,
  };
}

async function testCurrentEndpoint() {
  console.log("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞...");

  const port = process.env.PORT || "5001";
  const testUrl = `http://localhost:${port}/auth/google`;

  try {
    const response = await fetch(testUrl, {
      method: "GET",
      redirect: "manual",
    });

    console.log(`üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status}`);

    if (response.status === 302) {
      const location = response.headers.get("location");
      console.log(`üîÑ Redirect –Ω–∞: ${location}`);

      if (location?.includes("accounts.google.com")) {
        console.log("‚úÖ Redirect –Ω–∞ Google —Ä–∞–±–æ—Ç–∞–µ—Ç");

        // –ò–∑–≤–ª–µ–∫–∞–µ–º redirect_uri –∏–∑ URL
        const url = new URL(location);
        const redirectUri = url.searchParams.get("redirect_uri");
        console.log(`üéØ –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π redirect_uri: ${redirectUri}`);

        return redirectUri;
      } else {
        console.log("‚ùå Redirect –Ω–µ –Ω–∞ Google");
      }
    } else {
      console.log("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞");
    }
  } catch (error) {
    console.log("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:", error.message);
    console.log("   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω");
  }

  return null;
}

async function main() {
  const diagnosis = diagnoseRedirectUriMismatch();

  if (diagnosis.isCorrect) {
    const actualRedirectUri = await testCurrentEndpoint();

    if (actualRedirectUri) {
      console.log("\nüìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ:");
      console.log(`   –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π: ${diagnosis.currentCallbackUrl}`);
      console.log(`   –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π: ${actualRedirectUri}`);

      if (diagnosis.currentCallbackUrl === actualRedirectUri) {
        console.log(
          "‚úÖ URLs —Å–æ–≤–ø–∞–¥–∞—é—Ç - –ø—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ Google Cloud Console"
        );
      } else {
        console.log("‚ùå URLs –ù–ï —Å–æ–≤–ø–∞–¥–∞—é—Ç - –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏");
      }
    }
  }

  console.log("\nüîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:");
  console.log("   Google Cloud Console: https://console.cloud.google.com/");
  console.log(
    "   OAuth 2.0 Playground: https://developers.google.com/oauthplayground/"
  );
  console.log(
    "   –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://developers.google.com/identity/protocols/oauth2"
  );
}

if (require.main === module) {
  main();
}
