version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: tada-postgres-local
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: rental_platform_local
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init:/docker-entrypoint-initdb.d
    networks:
      - tada-network

  # LocalStack for S3 testing
  localstack:
    image: localstack/localstack:latest
    container_name: tada-localstack
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - AWS_DEFAULT_REGION=eu-north-1
    ports:
      - "4566:4566"
    volumes:
      - localstack_data:/tmp/localstack
    networks:
      - tada-network

  # Backend (NestJS)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: tada-backend-local
    environment:
      - NODE_ENV=development
    env_file:
      - ./backend/.env
    ports:
      - "5001:5001"
    volumes:
      - ./backend/src:/app/src
      - ./backend/uploads:/app/uploads
    depends_on:
      - postgres
      - localstack
    networks:
      - tada-network
    command: npm run start:dev

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: tada-frontend-local
    env_file:
      - ./frontend/.env.local
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    depends_on:
      - backend
    networks:
      - tada-network
    command: npm run dev

  # PGAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: tada-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@tada.local
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - tada-network

volumes:
  postgres_data:
  localstack_data:

networks:
  tada-network:
    driver: bridge
